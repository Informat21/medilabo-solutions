networks:  microservices-network:    driver: bridgeservices:  mysql:    image: mysql:8.0    container_name: mysql    ports:      - "3307:3306"    networks:      - microservices-network    environment:      MYSQL_ROOT_PASSWORD: root      MYSQL_DATABASE: medilabo    volumes:      - mysql-data:/var/lib/mysql  mongo:    image: mongo:4.4    container_name: mongo    ports:      - "27017:27017"    networks:      - microservices-network    volumes:      - mongo-data:/data/db    environment:      MONGO_INITDB_DATABASE: medilabo  patient-service:    build: ./patient-service    container_name: patient-service    ports:      - "8081:8081"    networks:      - microservices-network    depends_on:      - mysql    environment:      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/medilabo?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true      SPRING_DATASOURCE_USERNAME: root      SPRING_DATASOURCE_PASSWORD: root      SPRING_JPA_HIBERNATE_DDL_AUTO: update      SPRING_JPA_SHOW_SQL: true      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect      SPRING_APPLICATION_NAME: patient-service  notes-service:    build: ./notes-service    container_name: notes-service    ports:      - "8083:8083"    networks:      - microservices-network    depends_on:      - mongo    environment:      SERVER_PORT: 8083      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/medilabo  diabetes-risk-service:    build: ./diabetes-risk-service    container_name: diabetes-risk-service    ports:      - "8084:8084"    networks:      - microservices-network    depends_on:      - patient-service      - notes-service    environment:      SERVER_PORT: 8084      SERVER_ADDRESS: 0.0.0.0  front:    build: ./front    container_name: front    ports:      - "8082:8082"    networks:      - microservices-network    depends_on:      - patient-service      - notes-service      - diabetes-risk-service    environment:      SERVER_PORT: 8082      SERVER_ADDRESS: 0.0.0.0  gateway-service:    build: ./gateway-service    container_name: gateway-service    ports:      - "8080:8080"    networks:      - microservices-network    depends_on:      - patient-service      - notes-service      - diabetes-risk-service      - front    environment:      SERVER_PORT: 8080      SERVER_ADDRESS: 0.0.0.0volumes:  mongo-data:  mysql-data: